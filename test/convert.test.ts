import { expect, it } from 'vitest'
import { onigurumaToRegexp } from '../src'

it('convert', () => {
  expect(onigurumaToRegexp('((?<![_$[:alnum:])\\]]|\\+\\+|--|}|\\*\\/)|((?<=^return|[^\\._$[:alnum:]]return|^case|[^\\._$[:alnum:]]case))\\s*)\\/(?![\\/*])(?=(?:[^\\/\\\\\\[]|\\\\.|\\[([^\\]\\\\]|\\\\.)*\\])+\\/([dgimsuy]+|(?![\\/\\*])|(?=\\/\\*))(?!\\s*[a-zA-Z0-9_$]))'))
    .toMatchInlineSnapshot(`/\\(\\(\\?<!\\[_\\$0-9A-Za-z\\)\\\\\\]\\]\\|\\\\\\+\\\\\\+\\|--\\|\\}\\|\\\\\\*\\\\/\\)\\|\\(\\(\\?<=\\^return\\|\\[\\^\\\\\\._\\$0-9A-Za-z\\]return\\|\\^case\\|\\[\\^\\\\\\._\\$0-9A-Za-z\\]case\\)\\)\\\\s\\*\\)\\\\/\\(\\?!\\[\\\\/\\*\\]\\)\\(\\?=\\(\\?:\\[\\^\\\\/\\\\\\\\\\\\\\[\\]\\|\\\\\\\\\\.\\|\\\\\\[\\(\\[\\^\\\\\\]\\\\\\\\\\]\\|\\\\\\\\\\.\\)\\*\\\\\\]\\)\\+\\\\/\\(\\[dgimsuy\\]\\+\\|\\(\\?!\\[\\\\/\\\\\\*\\]\\)\\|\\(\\?=\\\\/\\\\\\*\\)\\)\\(\\?!\\\\s\\*\\[a-zA-Z0-9_\\$\\]\\)\\)/`)
})

it('with flags', () => {
  expect(onigurumaToRegexp('(?i)foo'))
    .toMatchInlineSnapshot(`/foo/i`)
})
